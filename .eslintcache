[{"C:\\Users\\st788\\Desktop\\final\\src\\index.js":"1","C:\\Users\\st788\\Desktop\\final\\src\\components\\App.jsx":"2","C:\\Users\\st788\\Desktop\\final\\src\\components\\Resume.jsx":"3","C:\\Users\\st788\\Desktop\\final\\src\\components\\Projects.jsx":"4","C:\\Users\\st788\\Desktop\\final\\src\\components\\Skill.jsx":"5","C:\\Users\\st788\\Desktop\\final\\src\\components\\Home.jsx":"6","C:\\Users\\st788\\Desktop\\final\\src\\components\\nav.jsx":"7","C:\\Users\\st788\\Desktop\\final\\src\\components\\Nav.jsx":"8","C:\\Users\\st788\\Desktop\\final\\src\\components\\Random.jsx":"9"},{"size":336,"mtime":1611563968098,"results":"10","hashOfConfig":"11"},{"size":711,"mtime":1611764503741,"results":"12","hashOfConfig":"11"},{"size":2617,"mtime":1611819268838,"results":"13","hashOfConfig":"11"},{"size":3920,"mtime":1611751258389,"results":"14","hashOfConfig":"11"},{"size":3126,"mtime":1611757587004,"results":"15","hashOfConfig":"11"},{"size":2601,"mtime":1611755178764,"results":"16","hashOfConfig":"11"},{"size":414,"mtime":1611370936512,"results":"17","hashOfConfig":"18"},{"size":1212,"mtime":1611765544871,"results":"19","hashOfConfig":"11"},{"size":3387,"mtime":1611770448673,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"17dsh2o",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lb9dak",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},"C:\\Users\\st788\\Desktop\\final\\src\\index.js",[],["44","45"],"C:\\Users\\st788\\Desktop\\final\\src\\components\\App.jsx",[],"C:\\Users\\st788\\Desktop\\final\\src\\components\\Resume.jsx",["46"],"C:\\Users\\st788\\Desktop\\final\\src\\components\\Projects.jsx",["47","48"],"import React, { useEffect, useRef } from \"react\";\r\nimport Nav from './Nav'\r\nimport imgone from '../img/worldaffairlogo.svg';\r\nimport imgtwo from '../img/webpandlogo.svg';\r\nimport imgthree from '../img/eventlogo.svg';\r\n\r\n\r\nimport VanillaTilt from \"vanilla-tilt\";\r\n\r\nfunction Tilt(props) {\r\n    const { options, ...rest } = props;\r\n    const tilt = useRef(null);\r\n  \r\n    useEffect(() => {\r\n      VanillaTilt.init(tilt.current, options);\r\n    }, [options]);\r\n  \r\n    return <div ref={tilt} {...rest} />;\r\n  }\r\n  \r\n\r\n\r\nconst Projects = () => {\r\n\r\n    const options = {\r\n        speed: 7000,\r\n      scale: 2.4,\r\n      max: 30,\r\n      gyroscope: false, \r\n\r\n }\r\n\r\n const projectName = [\r\n    { weblink:\"https://aranavtiwari.github.io/WA/\", gitlink:\"https://github.com/aranavtiwari/WA\", link:\"linkweb\", iconweb:\"fas fa-globe\", nameweb:\"Web App\" ,icongit:\"fab fa-github\",gitname:\"Github Org\" , class:\"float-right\", img:imgone, heading:\"World Affair\", description:`World Affair is Webapp where you can find most underrated news around the world.\\\r\n                                                                             I designed and developed the frontend with React/Sass from scratch `},\r\n    {iconweb:\"fas fa-globe\", nameweb:\"Web App\", weblink:\"https://webpanda.netlify.app/\" ,icongit:\"fab fa-github\", gitname:\"Github Org\", gitlink:\"https://github.com/aranavtiwari/ast-website\",link:\"linkweb\", rolecss:\"role\",   role:\"Freelance Frontend\",  direction:\"reverse\", class:\"float-left\", img:imgtwo, heading:\"Web Panda\", description:\"Web Panda was a startup which offers web development service to their client with source code.\\\r\n                                                                                            I worked on the landing page and the entire website from scratch. I utilized react-static to generate static pages with instant navigation. I also organized Design Sprints to target specific audiences, started from scratch with UI/UX to develop a unique brand identity for the company. Made personalized icons. illustrations, animations, etc.\" },\r\n    {iconweb:\"fas fa-globe\", nameweb:\"Web App\", weblink:\"#\" ,icongit:\"fab fa-github\", gitname:\"Github Org\", gitlink:\"https://github.com/aranavtiwari/Events-MERN\",link:\"linkweb\",   class:\"float-right \",  img:imgthree, heading:\"Events\", description:\"Events is a platform where you can views other's personal event's or memories, and you can also share your events and memories.You can give like if you like any events.\"},\r\n   \r\n ];\r\n\r\n\r\n const projectShow = () => {\r\n  return projectName.map((data) => {\r\n      console.log(data.img)\r\n      return (\r\n          <div className=\"project\" id={data.direction}>\r\n              <div className=\"project-left\">\r\n                 \r\n                 <h1 className={data.class}>{data.heading}</h1>\r\n                 <h2 className={data.rolecss}>{data.role}</h2>\r\n                  \r\n                  <p className={data.class}>{data.description}</p>\r\n\r\n                  <div className=\"link\">\r\n                  <a href={data.weblink} className={data.link}><i class={data.iconweb}/>{data.nameweb}</a>\r\n                  <a href={data.gitlink} className={data.link}><i class={data.icongit}/>{data.gitname}</a>\r\n                  </div>\r\n              </div>\r\n              <div className=\"project-right\">\r\n                  <img src={data.img} className=\"img\" />\r\n              </div>\r\n          </div>\r\n      )\r\n  })\r\n}\r\n\r\nreturn (\r\n  <div>\r\n      <Nav/>\r\n      <div className=\"project-container\">\r\n          <div className=\"img-skill\">\r\n          <Tilt className=\"box\" options={options} >\r\n             <h1 className=\"logo\">Projects <span>{}</span> </h1>\r\n             <p className=\"logo-des\">The work stuff!</p>\r\n          </Tilt> \r\n          </div>\r\n          <div className=\"project-outer\">\r\n              {projectShow()}\r\n          </div>\r\n\r\n      </div>\r\n  </div>\r\n)\r\n    \r\n}\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\st788\\Desktop\\final\\src\\components\\Skill.jsx",["49"],"import React, { useEffect, useRef } from \"react\";\r\nimport Nav from './Nav'\r\nimport VanillaTilt from \"vanilla-tilt\";\r\nimport img from '../img/skilllogo.png';\r\nimport pone from '../img/p1.png';\r\nimport ptwo from '../img/p2.png';\r\nimport pthree from '../img/p3.png';\r\nimport pfour from '../img/p4.png';\r\n\r\n\r\nfunction Tilt(props) {\r\n    const { options, ...rest } = props;\r\n    const tilt = useRef(null);\r\n  \r\n    useEffect(() => {\r\n      VanillaTilt.init(tilt.current, options);\r\n    }, [options]);\r\n  \r\n    return <div ref={tilt} {...rest} />;\r\n  }\r\n  \r\n  function Skill() {\r\n    const options = {\r\n        speed: 7000,\r\n      scale:2.2,\r\n      max: 30,\r\n      gyroscope: false,\r\n      \r\n };\r\n\r\n const skillName = [\r\n     {class:\"float-right\", img:pone, heading:\"UX/UI\", description:\"I design the user experience and then style the user interface myself for almost all of the projects I work on.I am flexible in medium and rigid in quality.\"},\r\n     { direction:\"reverse\", class:\"float-left\", img:ptwo, heading:\"Frontend\", description:\" Have experience in React, Next and HTML5/CSS/JS along with several templating systems.I prefer to write my own components, and styles that go with it. I want to have absolute control over all the pixels.\" },\r\n     {class:\"float-right\",  img:pthree, heading:\"Backend\", description:\"While I obsess over frontend, I also recognize that a lot of the functionality of an app is enabled by it's backend.I have worked with NodeJs,Exprss and MongoDB for backend, with databases, APIs, request handling, etc.\"},\r\n     { direction:\"reverse\", class:\"float-left\", img:pfour, heading:\"General Programming\", description:\"Given my curious mindset, I have tested the waters of various fields: Databases, Scripting, Web Scraping, DS, Micro-services, CLI tools to name a few.The core of it all is the basic principle of identifying the problem and testing multiple focused approaches till I figure out the optimum solution.\"}\r\n ];\r\n\r\n const skillShow = () => {\r\n        return skillName.map((data) => {\r\n            console.log(data.img)\r\n            return (\r\n                <div className=\"skill\" id={data.direction}>\r\n                    <div className=\"skill-left\">\r\n                        <h1 className={data.class}>{data.heading}</h1>\r\n                        <p className={data.class}>{data.description}</p>\r\n                    </div>\r\n                    <div className=\"skill-right\">\r\n                        <img src={data.img} className=\"img\" />\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n }\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n            <Nav/>\r\n            <div className=\"skill-container\">\r\n                <div className=\"img-skill\">\r\n                <Tilt className=\"box\" options={options} >\r\n                   <h1 className=\"logo\">Skills</h1>\r\n                   <p className=\"logo-des\">The tool for trade!</p>\r\n                </Tilt> \r\n                </div>\r\n                <div className=\"skill-outer\">\r\n                    {skillShow()}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\nexport default Skill;\r\n\r\n","C:\\Users\\st788\\Desktop\\final\\src\\components\\Home.jsx",["50","51"],"import React, { useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport VanillaTilt from \"vanilla-tilt\";\r\nimport Nav from './Nav';\r\nimport img from '../img/logo1.svg'\r\n\r\n\r\n\r\nfunction Tilt(props) {\r\n  const { options, ...rest } = props;\r\n  const tilt = useRef(null);\r\n\r\n  useEffect(() => {\r\n    VanillaTilt.init(tilt.current, options);\r\n  }, [options]);\r\n\r\n  return <div ref={tilt} {...rest} />;\r\n}\r\n\r\nfunction Home() {\r\n  const options = {\r\n    scale: 1.3,\r\n    speed: 7000,\r\n    max: 24,\r\n    gyroscope: false, \r\n\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n        \r\n        <Nav/>\r\n            <div className=\"container\">\r\n                <div className=\"container-right\">\r\n                    <ul className=\"container-right-content\">\r\n                        <li className=\"container-right-text\">\r\n                            Hi, I am Aranavsheel Tiwari\r\n                        </li>\r\n                        <li className=\"container-right-text\">\r\n                            A Full Stack Web Developer\r\n                        </li>\r\n                        <li className=\"container-right-text\">\r\n                            I like to code, design,<br/> sometime writes\r\n                        </li>\r\n                        <li className=\"container-right-text\">\r\n                            I love music, games, book, art <br/> and nature\r\n                        </li>\r\n                        <li className=\"container-right-text\">\r\n                            I prefer to listen and think,<br/> watch and learn\r\n                        </li>\r\n                        <li className=\"container-right-text\">\r\n\r\n                            <div className=\"link-box\">\r\n                              <a href=\"https://github.com/aranavtiwari?tab=repositories\"><i class=\"fab fa-github\"></i></a>\r\n                              <a href=\"https://www.linkedin.com/in/aranavsheel-tiwari-93bb96204/\"><i class=\"fab fa-linkedin\"></i></a>\r\n                              <a href=\"mailto:aranavstiwari@gmail.com\"><i class=\"far fa-envelope\"></i></a>\r\n                              <a href=\"#\"><i class=\"fab fa-behance\"></i></a>\r\n                            </div>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    \r\n                </div>\r\n                <div className=\"container-left\">\r\n                    \r\n                <Tilt className=\"box\" options={options} >\r\n                   <img src={img} alt=\"\" className=\"img\"/>\r\n                </Tilt> \r\n                \r\n                </div>    \r\n            </div>   \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\st788\\Desktop\\final\\src\\components\\nav.jsx",[],"C:\\Users\\st788\\Desktop\\final\\src\\components\\Nav.jsx",[],"C:\\Users\\st788\\Desktop\\final\\src\\components\\Random.jsx",["52"],"import React, { useEffect, useRef } from \"react\";\r\nimport Nav from './Nav'\r\nimport imgone from '../img/snakelogo.svg';\r\nimport imgtwo from '../img/tttlogo.svg';\r\nimport imgthree from '../img/templogo.svg';\r\n\r\n\r\nimport VanillaTilt from \"vanilla-tilt\";\r\n\r\nfunction Tilt(props) {\r\n    const { options, ...rest } = props;\r\n    const tilt = useRef(null);\r\n  \r\n    useEffect(() => {\r\n      VanillaTilt.init(tilt.current, options);\r\n    }, [options]);\r\n  \r\n    return <div ref={tilt} {...rest} />;\r\n  }\r\n  \r\n\r\n\r\nconst Random = () => {\r\n\r\n    const options = {\r\n        speed: 7000,\r\n      scale: 2.4,\r\n      max: 30,\r\n      gyroscope: false, \r\n\r\n }\r\n\r\n const projectName = [\r\n    { weblink:\"https://aranavtiwari.github.io/WA/\", gitlink:\"https://github.com/aranavtiwari/Multiplayer-Snake-game\", link:\"linkweb\", iconweb:\"fas fa-globe\", nameweb:\"Web App\" ,icongit:\"fab fa-github\",gitname:\"Github Org\" , class:\"float-right\", img:imgone, heading:\"MPSG\", description:\"MPSG is real time multiplayer snake game where two user can play against each other . I developed the frontend with HTML5/CSS and backend with Socket.io\"},\r\n    {iconweb:\"fas fa-globe\", nameweb:\"Web App\", weblink:\"https://github.com/aranavtiwari/AI-tictactoe\" ,icongit:\"fab fa-github\", gitname:\"Github Org\", gitlink:\"https://github.com/aranavtiwari/ast-website\",link:\"linkweb\", rolecss:\"role\",   role:\"Minimax\",  direction:\"reverse\", class:\"float-left\", img:imgtwo, heading:\"AITT\", description:\"Created AI with Minimax Algorithm in Game Theory where a user can play against a AI.It can be implemented on various game like chess, Tic Tac Toe. I choose Tictactoe \" },\r\n    {iconweb:\"fas fa-globe\", nameweb:\"Web App\", weblink:\"#\" ,icongit:\"fab fa-github\", gitname:\"Github Org\", gitlink:\"https://github.com/aranavtiwari?tab=repositories\",link:\"linkweb\",   class:\"float-right \",  img:imgthree, heading:\"Templates\", description:\"Create various landing page templates, which can be used by various organization. All templated is pure HTML5 and SASS.The focus is on speed and minimalism\"},\r\n   \r\n ];\r\n\r\n\r\n const projectShow = () => {\r\n  return projectName.map((data) => {\r\n      console.log(data.img)\r\n      return (\r\n          <div className=\"project\" id={data.direction}>\r\n              <div className=\"project-left\">\r\n                 \r\n                 <h1 className={data.class}>{data.heading}</h1>\r\n                 <h2 className={data.rolecss}>{data.role}</h2>\r\n                  \r\n                  <p className={data.class}>{data.description}</p>\r\n\r\n                  <div className=\"link\">\r\n                  \r\n                  <a href={data.gitlink} className={data.link}><i class={data.icongit}/>{data.gitname}</a>\r\n                  </div>\r\n              </div>\r\n              <div className=\"project-right\">\r\n                  <img src={data.img} className=\"img\" />\r\n              </div>\r\n          </div>\r\n      )\r\n  })\r\n}\r\n\r\nreturn (\r\n  <div>\r\n      <Nav/>\r\n      <div className=\"project-container\">\r\n          <div className=\"img-skill\">\r\n          <Tilt className=\"box\" options={options} >\r\n             <h1 className=\"logo\">Random<span>{}</span> </h1>\r\n             <p className=\"logo-des\">Side Projects // experiments</p>\r\n          </Tilt> \r\n          </div>\r\n          <div className=\"project-outer\">\r\n              {projectShow()}\r\n          </div>\r\n\r\n      </div>\r\n  </div>\r\n)\r\n    \r\n}\r\n\r\nexport default Random;\r\n\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":11},{"ruleId":"61","severity":1,"message":"62","line":36,"column":339,"nodeType":"63","messageId":"64","endLine":37,"endColumn":436},{"ruleId":"65","severity":1,"message":"66","line":61,"column":19,"nodeType":"67","endLine":61,"endColumn":57},{"ruleId":"65","severity":1,"message":"66","line":48,"column":25,"nodeType":"67","endLine":48,"endColumn":63},{"ruleId":"57","severity":1,"message":"68","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":58,"column":31,"nodeType":"67","endLine":58,"endColumn":43},{"ruleId":"65","severity":1,"message":"66","line":59,"column":19,"nodeType":"67","endLine":59,"endColumn":57},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'img' is defined but never used.","Identifier","unusedVar","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]